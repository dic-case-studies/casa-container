From d8a4c6e24df34012d67b8ced32c43d3ba966fe09 Mon Sep 17 00:00:00 2001
From: E4R <e4r@localhost.localdomain>
Date: Fri, 9 Dec 2022 12:45:44 +0530
Subject: [PATCH] Update-casatools-build-to-compile-with-march

---
 .gitmodules                        |  3 ++-
 casatools/ac/templates/setup.py.in | 13 ++++++++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/.gitmodules b/.gitmodules
index cb9b400a9..0fdebb9ad 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -3,4 +3,5 @@
 	url = https://github.com/grpc/grpc
 [submodule "casatools/casacore"]
 	path = casatools/casacore
-	url = https://github.com/casacore/casacore.git
+	url = https://github.com/dic-case-studies/casacore.git
+	branch = feature/simd-min-3.5.0
diff --git a/casatools/ac/templates/setup.py.in b/casatools/ac/templates/setup.py.in
index 584c5f119..99f1e19b9 100644
--- a/casatools/ac/templates/setup.py.in
+++ b/casatools/ac/templates/setup.py.in
@@ -105,6 +105,7 @@ parser.add_argument('--tests', help="Test name prefix(es) to search for. For use
 parser.add_argument('--debug', help='debug', action='store_true')
 parser.add_argument('--relwithdebinfo', help='Release build with debug and optimization flags', action='store_true')
 parser.add_argument('--stripsyms', help='Strip debug info out of the executable files from --relwithdebinfo. Used with release builds.', action='store_true')
+parser.add_argument('--march', help='Tune the code for this architecture(binary becomes not portable)', dest='march')
 parser.add_argument('bdist_wheel', help='bdist_wheel')
 
 args=parser.parse_args()
@@ -112,12 +113,17 @@ _tests_ = args.TESTS
 _debug_build_ = args.debug
 _rel_with_deb_info_ = args.relwithdebinfo
 _strip_syms_ = args.stripsyms
+_march_ = args.march
 print("_debug_build_: " + str(_debug_build_))
 print("_rel_with_deb_info_: " + str(_rel_with_deb_info_))
 print("_strip_syms_: " + str(_strip_syms_))
+print("_march_:" + str(_march_))
 
 # Remove the "non-standard" arguments from sys.argv so as not to confuse dist_tools
 argv_to_remove = list(filter(lambda x: x.startswith("--tests="), sys.argv))
+for v in argv_to_remove:
+    sys.argv.remove(v)
+argv_to_remove = list(filter(lambda x: x.startswith("--march="), sys.argv))
 for v in argv_to_remove:
     sys.argv.remove(v)
 if "--version" in sys.argv:
@@ -1011,7 +1017,7 @@ if casa_have_mpi:
 else:
     mpi_cxx_flags = []
 
-module_cflags = { 'casacore/': ['-DCFITSIO_VERSION_MAJOR=3', '-DCFITSIO_VERSION_MINOR=370', \
+module_cflags = { 'casacore/': ['-U_GLIBCXX_ASSERTIONS', '-DCFITSIO_VERSION_MAJOR=3', '-DCFITSIO_VERSION_MINOR=370', \
                                  '-DHAVE_DYSCO', '-DHAVE_FFTW3', '-DHAVE_FFTW3_THREADS', '-DHAVE_READLINE', \
                                  '-DUSE_THREADS', '-DUseCasacoreNamespace', '-DWCSLIB_VERSION_MAJOR=5', \
                                  '-DWCSLIB_VERSION_MINOR=15', '-fsigned-char', '-DWITHOUT_BOOST', \
@@ -1063,11 +1069,16 @@ def relwithdebinfo_build():
 def stripsyms_build():
     return _strip_syms_
 
+def tune_arch():
+    return _march_
+
 def get_optimization_flags():
     if debug_build( ):
         return ['-g']
     elif relwithdebinfo_build():
         return ['-g', '-O2']
+    elif tune_arch():
+        return ['-O2', f'-march={_march_}']
     else:
         return ['-O2']
 
-- 
2.31.1

